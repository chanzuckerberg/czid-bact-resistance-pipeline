// Name of the docker image to use, i.e. this docker image is located
// at https://hub.docker.com/r/estrain/srst2/
val srst2 = "estrain/srst2"

// Compute a srst2 alignment
func Srst2Align(project_id int, sample_id int, output_dir string, min_cov int, n_threads int) = 
//     exec(image := srst2, mem := 4*GiB, cpu := 2) (signature file) {"
//        ./align_amr --project_id {{project_id}} --sample_id {{sample_id}} --output_dir {{output_dir}} --min_coverage {{min_cov}} --n_threads {{n_threads}}
// "}
// exec(image := srst2, mem := 4*GiB, cpu := 2) (out file) {"
//        ./align_amr.sh --project_id {{project_id}} --sample_id {{sample_id}} --output_dir {{output_dir}} --min_coverage {{min_cov}} --n_threads {{n_threads}} >> {{out}}
// "}
// this exec not works
// exec(image := srst2, mem := 4*GiB, cpu := 2) (out file) {"
//        ./hello.sh > {{out}}
// "}

// this works
// exec(image := srst2, mem := 4*GiB, cpu := 2) (out file) {"
//        echo "hello" > {{out}}
// "}
// TODO: how to execute the executable???
exec(image := srst2, mem := 4*GiB, cpu := 2) (out file) {"
		wget 'https://raw.githubusercontent.com/chanzuckerberg/idseq-bact-resistance-pipeline/meera-master/align_amr.sh' > {{out}}
		sh align_amr.sh --project_id {{project_id}} --sample_id {{sample_id}} --output_dir {{output_dir}} --min_coverage {{min_cov}} --n_threads {{n_threads}} > {{out}}
"}
// jhdddd hhjj
project_id := 64
sample_id := 4112
output_dir := "/home/msrinivasan/reflow_test_amr/"
min_cov := 0
n_threads := 16
// r1 := file("s3://msrinivasan-czbiohub-reflow-quickstart-cache/align_amr.sh")
val files = make("$/files")
val output_signature = "s3://msrinivasan-czbiohub-reflow-quickstart-cache/"
val signature = Srst2Align(project_id, sample_id, output_dir, min_cov, n_threads)
val Main = files.Copy(signature, output_signature)
// val Main = {
	// project_id := 64
	// sample_id := 4112
	// output_dir := "/home/msrinivasan/reflow_test_amr/"
	// min_cov := 0
	// n_threads := 16
	// r1 := file("s3://msrinivasan-czbiohub-reflow-quickstart-cache/align_amr.sh")
	// files := make("$/files")
	// val output_signature = "s3://msrinivasan-czbiohub-reflow-quickstart-cache/"
	// val signature = Srst2Align(r1, project_id, sample_id, output_dir, min_cov, n_threads)
// 	files.Copy(signature, output_signature)
// }
